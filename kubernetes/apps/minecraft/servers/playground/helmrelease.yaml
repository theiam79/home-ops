---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: playground-mc
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: minecraft
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    resources:
      requests:
        cpu: 512m
        memory:  500Mi
    workloadAsStatefulSet: true
    strategyType: RollingUpdate
    serviceAnnotations:
      mc-router.itzg.me/externalServerName: playground.mc.${SECRET_DOMAIN}
      reloader.stakater.com/auto: "true"
    minecraftServer:
      eula: "TRUE"
      type: "FABRIC"
      difficulty: normal
      forcegameMode: true
      gameMode: creative
      modrinth:
        projects:
          - fabric-api
          - chunky
          - bluemap
      extraPorts:
        - name: map
          containerPort: 8100
          protocol: TCP
          service:
            port: 8100
    persistence:
      dataDir:
        enabled: true
        existingClaim: playground-mc
    sidecarContainers:
      - |
        name: {{ template "minecraft.fullname" . }}-proxy
        image: nginx:stable-alpine
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
          - name: datadir
            mountPath: /data
            readOnly: true
          - name: nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: nginx-cache
            mountPath: /var/cache/nginx
          - name: nginx-tmp
            mountPath: /tmp/nginx
    extraVolumes:
      # - volumeMounts:
      #     - name: bluemap-web
      #       mountPath: /web/bluemap
      - volumeMounts:
          - name: bluemap-config
            mountPath: /data/config/bluemap/core.conf
            subPath: core.conf
        volumes:
          - name: bluemap-config
            configMap:
              name: bluemap-config
          - name: nginx-conf
            configMap:
              name: nginx-conf
          - name: nginx-cache
            emptyDir: {}
          - name: nginx-tmp
            emptyDir: {}
    extraDeploy:
      - |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: bluemap-config # Will be prefixed
        data:
          core.conf: |
            accept-download: true
            data: "/data/bluemap/web"
            render-thread-count: 2
      - |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: nginx-conf
        data:
          nginx.conf: |
            user nginx;

            error_log /tmp/nginx/error.log warn;
            pid /tmp/nginx/nginx.pid;

            events {}
            http {
              server {
                  listen 8080;
                  root /data/bluemap/web;

                  location /maps/ {
                    # All high-res tile data and some json data is precompressed into *.gz files
                    gzip_static always;

                    # Return 204 No Content if requesting a missing tile
                    location ~* ^/maps/[^/]*/tiles/ {
                      error_page 404 = @no-content;
                    }

                    # Proxy all requests for live data to the integrated webserver.
                    # Fall back to @server-offline if it can't be contacted.
                    location ~* ^/maps/[^/]*/live/ {
                      error_page 502 504 = @server-offline;
                      resolver kube-dns.kube-system.svc.cluster.local;
                      set $live_bluemap_upstream 127.0.0.1:8100;
                      proxy_pass $live_bluemap_upstream;
                    }
                  }

                  location @no-content {
                    internal;
                    return 204;
                  }

                  # Serve "live" data from the disk when the integrated webserver can't be reached
                  location @server-offline {
                    internal;
                    try_files $uri =204;
                  }
              }
            }